import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import { draftMode } from "next/dist/client/components/headers";
import Head from "next/head";
import Link from "next/link";
import type { RouterOutputs } from "~/utils/api";
import { api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image"

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if (!user) return null;
  
  return (
    <div className="flex gap-3 w-full">
      <Image 
      src={user.profileImageUrl} 
      alt="Profile Image" 
      className="h-14 w-14 rounded-full" 
      />        
      <input placeholder="Type some emojis bro..." className="bg-transparent 
      outline-none grow">       
      </input>
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const { post, author} = props;
  return (
  <div className="flex gap-3 border-b border-slate-500 p-4">
    <Image 
      className="h-14 w-14 rounded-full" 
      src={author.profileImage} 
      alt={`@${author.username}'s profile pic`} 
      width={56}
      height={56}
    />
    <div className="flex flex-col">
      <div className="flex text-slate-400 gap-3">
        <span>{`@${author.username}`}</span><span>{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>      
      </div>
      <span>{post.content}</span>
    </div>   
  </div>
  );       
}

const Home: NextPage = () => {
  const {data, isLoading} = api.posts.getAll.useQuery();

  const user = useUser();

  if (isLoading) {
    return <div>Loading</div>
  }

  if (!data) {
    return <div>Something went wrong!</div>
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen border-x-4">
        <div className="w-full md:max-w-2xl border-x border-slate-500">
          <div className="flex border-b border-slate-500 p-4">           
              {!user.isSignedIn && (
                <div className="flex justify-center">
                  <SignInButton />
                </div>
                )}
              {!!user.isSignedIn && <CreatePostWizard />}      
          </div>              
          <div className="flex flex-col">
           {[...data, ...data].map((postWithUser) => (
            <PostView key={postWithUser.post.id} {...postWithUser} />
           ))}
          </div>
        </div>      
      </main>
    </>
  );
};

export default Home;
